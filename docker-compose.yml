version: '3.8'

services:

#  app:
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#    ports:
#      - "8000:8000"
#    environment:
#      - API_KEY=token
#      - FROM_EMAIL=email
#      - FROM_PASSWORD=senha
#      - SMTP_SERVER=smtp.gmail.com
#      - SMTP_PORT=587
#      - MONGODB_URI=mongodb://mongo:27017/
#      - AWS_ACCESS_KEY_ID=test
#      - AWS_SECRET_ACCESS_KEY=test
#      - AWS_DEFAULT_REGION=us-east-1
#      - LOCALSTACK_ENDPOINT=http://localstack:4566
#    depends_on:
#      - mongo
#      - localstack

#  sqs_consumer:
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#    command: python -m src.main_sqs_consumer
#    environment:
#      - API_KEY=token
#      - FROM_EMAIL=email
#      - FROM_PASSWORD=senha
#      - SMTP_SERVER=smtp.gmail.com
#      - SMTP_PORT=587
#      - MONGODB_URI=mongodb://mongo:27017/
#      - AWS_ACCESS_KEY_ID=test
#      - AWS_SECRET_ACCESS_KEY=test
#      - AWS_DEFAULT_REGION=us-east-1
#      - LOCALSTACK_ENDPOINT=http://localstack:4566
#    depends_on:
#      - mongo
#      - localstack

#  mongo:
#    image: mongo:6.0
#    ports:
#      - "27017:27017"
#    volumes:
#      - mongo_data:/data/db

#  lambda:
#    build:
#      dockerfile: ./lambda/Dockerfile
#    container_name: lambda
#    environment:
#      - SNS_TOPIC_ARN=arn:aws:sns:us-east-1:000000000000:transcription-topic
#    volumes:
#      - ./:/var/task/
#    depends_on:
#      - localstack
#    command: ["lambda_function.lambda_handler"]
    
  localstack:
    image: localstack/localstack:3.0.0
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,sqs,sns,lambda
      - DEFAULT_REGION=us-east-1
    entrypoint: /bin/bash -c "docker-entrypoint.sh & /docker-entrypoint-initaws.d/setup.sh && tail -f /dev/null"
    volumes:
      - localstack_data:/var/lib/localstack
      - ./lambda:/lambda
      - ./localstack:/docker-entrypoint-initaws.d
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongo_data:
  localstack_data:
