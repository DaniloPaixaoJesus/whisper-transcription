version: '3.8'

services:

#  app:
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#    ports:
#      - "8000:8000"
#    environment:
#      - API_KEY=token
#      - FROM_EMAIL=email
#      - FROM_PASSWORD=senha
#      - SMTP_SERVER=smtp.gmail.com
#      - SMTP_PORT=587
#      - MONGODB_URI=mongodb://mongo:27017/
#      - AWS_ACCESS_KEY_ID=test
#      - AWS_SECRET_ACCESS_KEY=test
#      - AWS_DEFAULT_REGION=us-east-1
#      - LOCALSTACK_ENDPOINT=http://localstack:4566
#    depends_on:
#      - mongo
#      - localstack

  sqs_consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python -m src.consumers.sqs_consumer
    environment:
      - API_KEY=token
      - FROM_EMAIL=email
      - FROM_PASSWORD=senha
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - MONGODB_URI=mongodb://mongo:27017/
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - LOCALSTACK_ENDPOINT=http://localstack:4566
    depends_on:
      - mongo
      - localstack

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  localstack:
    image: localstack/localstack:3.0.0
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,sqs
      - DEFAULT_REGION=us-east-1
    volumes:
      - ./src/teste.mkv:/teste.mkv
      - localstack_data:/var/lib/localstack
    entrypoint:
      - /bin/bash
      - -c
      - |
        docker-entrypoint.sh &
        until awslocal s3 mb s3://transcription-bucket; do
          echo "Waiting for LocalStack to be ready..."
          sleep 2
        done
        awslocal s3api put-object --bucket transcription-bucket --key teste.mkv --body /teste.mkv
        awslocal sqs create-queue --queue-name transcription-queue
        wait

volumes:
  mongo_data:
  localstack_data:
